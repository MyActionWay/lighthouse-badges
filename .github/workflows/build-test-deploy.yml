name: "Build, Test & Deploy"

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-test-deploy:
    name: "Build, Test & Deploy"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build & Test
        run: |
          yarn install
          yarn run lint
          yarn run test
          bash <(curl -s https://codecov.io/bash)
          yarn run system-test:light-run # System test with node installation
          yarn run docker:build
          yarn run docker:system-test:run # System test with docker installation

      - name: Show current lighthouse-badges version
        id: version
        run: jq -r '.version' package.json

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Deploy to Github Registry
        if: github.ref == 'refs/heads/master'
        run: |
          package_name=$(jq -r '.name' package.json)
          npm config set registry https://npm.pkg.github.com
          npm config set //npm.pkg.github.com/:_authToken ${GITHUB_TOKEN}
          [[ "$(npm show ${package_name} version)" ==  "${CURRENT_VERSION}" ]] && \
            echo "Current version ${CURRENT_VERSION} already published" || \
            npm publish --ignore-scripts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CURRENT_VERSION: ${{ steps.version.outputs.stdout }}

      - name: Deploy to npm.js Registry
        if: github.ref == 'refs/heads/master'
        run: |
          jq '.name="lighthouse-badges"' package.json > package.json.temp && mv -f package.json.temp package.json
          package_name=$(jq -r '.name' package.json)
          npm config set registry https://registry.npmjs.org
          npm config set //registry.npmjs.org/:_authToken ${NPM_AUTH_TOKEN}
          [[ "$(npm show ${package_name} version)" ==  "${CURRENT_VERSION}" ]] && \
            echo "Current version ${CURRENT_VERSION} already published" || \
            npm publish --ignore-scripts
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          CURRENT_VERSION: ${{ steps.version.outputs.stdout }}

      - name: Deploy to Dockerhub
        if: github.ref == 'refs/heads/master'
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ; yarn run docker:push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
